---
AWSTemplateFormatVersion: "2010-09-09"
Description: >  
  This template sets up the network infrastructure & Iam permissions for the variant aggregator web 
  application that is to be hosted & deployed. The Rds will be located within the public subnet 
  to simplify the set-up. 

  Written by - Jeremy Ng (Contact at jeremy.ng.w.k@sgh.com.sg/jeremy.ng.wk@duke-nus.edu.sg)

Parameters:
  ApiGatewayName:
    Type: String
    Description: Name of the Api Gateway
    Default: variant-aggregator-api
  ApiGatewayStageName:
    Type: String
    Description: Name of the Api Gateway Stage
    Default: staging
  ApiGatewayDeploymentName:
    Type: String
    Description: Name of the Api Gateway Deployment
    Default: prod
  RdsInstanceIdentifier:
    Type: String
    Description: Identifier of Rds instance
    Default: variant-aggregator-rds
  RdsInstanceType:
    Type: String
    Description: Type of Rds instance
    Default: db.t2.micro
  RdsInstanceStorage:
    Type: Number
    Description: Storage capacity of Rds instance in Gb
    Default: 20
  RdsUsername:
    Type: String
    NoEcho: true
    Description: Admin username for Rds database
  RdsPassword:
    Type: String
    NoEcho: true
    Description: Admin password for Rds database
  RdsEngine:
    Type: String
    Description: Engine of Rds database
    Default: mariadb
  RdsEngineVersion:
    Type: String
    Description: Version of Rds database engine
    Default: 10.11
Resources:
  # vpc with private & public subnets
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      Tags:
        - Key: Name
          Value: Rds Vpc
      CidrBlock:
        - 173.0.0.0/16
      EnableDnsSupport: false
      EnableDnsHostnames: false

  # internet gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Rds Internet Gateway

  # igw attachment
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # subnets  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '173.0.1.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Public subnet 1'
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '173.0.2.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Public subnet 2' 

  # route table & associations
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'public-rt'
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - InternetGateway
      - PublicRouteTable
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
 
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  
  # Rds security group
  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Rds Security Group'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: '0.0.0.0/0'
  
  # iam roles
  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: variant-aggregator-api-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: variant-aggregator-api-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"
  LambdaExecuteRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: variant-aggregator-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  ApiGatewayLogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: variant-aggregator-api-log-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: variant-aggregator-api-log-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:*"
                Resource: "*"
  
  # Api gateway 
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiGatewayName
  
  # Rds
  RdsSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'Rds Subnet Group'
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: 'Rds Subnet Group'
  Rds:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref RdsInstanceIdentifier
      DBInstanceClass: !Ref RdsInstanceType
      AllocatedStorage: !Ref RdsInstanceStorage
      Engine: !Ref RdsEngine
      EngineVersion: !Ref RdsEngineVersion
      MasterUsername: !Ref RdsUsername
      MasterUserPassword: !Ref RdsPassword
      DBName: !Ref DatabaseName
      DBSubnetGroupName: !Ref RdsSubnetGroup
      VPCSecurityGroups:
        - !GetAtt RdsSecurityGroup.GroupId
      PubliclyAccessible: true

Outputs:
  RdsDns:
    Value: !GetAtt Rds.Endpoint.Address
    Description: Rds endpoint