---
AWSTemplateFormatVersion: "2010-09-09"
Description: >  
  This template sets up the network infrastructure & Iam permissions for the variant aggregator web 
  application that is to be hosted & deployed. For security reason & in keeping with best practices, 
  the Rds instance will be placed within a private subnet. The Api gateway will be given permission
  to invoke the lambda functions that will interact with the Rds database. An Ec2 instance hosted behind
  an Alb will be used to update the database. 
  
  Written by - Jeremy Ng (Contact at jeremy.ng.w.k@sgh.com.sg/jeremy.ng.wk@duke-nus.edu.sg)

Parameters:
  ApiGatewayName:
    Type: String
    Description: Name of the Api Gateway
    Default: variant-aggregator-api
  ApiGatewayStageName:
    Type: String
    Description: Name of the Api Gateway Stage
    Default: staging
  ApiGatewayDeploymentName:
    Type: String
    Description: Name of the Api Gateway Deployment
    Default: prod
  MySqlLayerArn:
    Type: String
    Description: Arn of MySql layer for interacting with Rds database
    Default: variant-aggregator-mysql
  DatabaseName:
    Type: String
    Description: Name of the Rds database
    Default: variant_aggregator
  ClinvarTableName:
    Type: String
    Description: Name of the Clinvar table in the Rds database
    Default: clinvar
  RdsInstanceType:
    Type: String
    Description: Type of Rds instance
    Default: db.t2.micro
  RdsInstanceStorage:
    Type: Number
    Description: Storage capacity of Rds instance in Gb
    Default: 20
  RdsUsername:
    Type: String
    NoEcho: true
    Description: Admin username for Rds database
  RdsPassword:
    Type: String
    NoEcho: true
    Description: Admin password for Rds database

Resources:
  # vpc with private & public subnets
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      Tags:
        - Key: Name
          Value: Rds Vpc
      CidrBlock:
        - 173.0.0.0/16
      EnableDnsSupport: false
      EnableDnsHostnames: false

  # internet gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Rds Internet Gateway

  # igw attachment
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '173.0.1.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Private subnet 1'
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '173.0.2.0/24'
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Private subnet 2'
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '173.0.3.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Public subnet 1'
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '173.0.4.0/24'
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Public subnet 2'
  
  # route table
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'public-rt'
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'private-rt'

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable  

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - InternetGateway
      - PublicRouteTable
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - NatGateway
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway
  # security groups 

  # iam roles
  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: variant-aggregator-api-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: variant-aggregator-api-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"

  # Api gateway 
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiGatewayName
  
  # Rds
  Rds:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: variant-aggregator-rds
      DBInstanceClass: !Ref RdsInstanceType
      AllocatedStorage: !Ref RdsInstanceStorage
      Engine: mysql
      EngineVersion: 5.7
      MasterUsername: !Ref RdsUsername
      MasterUserPassword: !Ref RdsPassword
      DBName: !Ref DatabaseName
      VPCSecurityGroups:
        - !GetAtt RdsSecurityGroup.GroupId
      DBSubnetGroupName: !Ref RdsSubnetGroup
      PubliclyAccessible: false
      Tags:
        - Key: stack
          Value: variant-aggregator
Outputs:
  VPCId:
    Value: !Ref VPC
    Description: VPC Id
  RdsDns:
    Value: !GetAtt Rds.Endpoint.Address
    Description: Rds endpoint